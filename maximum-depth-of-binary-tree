//Question - https://leetcode.com/problems/maximum-depth-of-binary-tree/
//Answer - in cpp

DFS
 class Solution {
 public:
     int maxDepth(TreeNode* root) {
         return root?1+max(maxDepth(root->left),maxDepth(root->right)):0;
     }
 };
 
 
BFS
class Solution {
public:
    int maxDepth(TreeNode* root) {
        if(!root) return 0;
        int ans=0;
        queue<pair<TreeNode*,int>> que;
        que.push({root,1});
        while(!que.empty()){
            pair<TreeNode*,int> node = que.front();
            que.pop();
            ans = max(ans,node.second);
            if(node.first->left) que.push({node.first->left,node.second+1});
            if(node.first->right) que.push({node.first->right,node.second+1});
        }
        return ans;
    }
};
